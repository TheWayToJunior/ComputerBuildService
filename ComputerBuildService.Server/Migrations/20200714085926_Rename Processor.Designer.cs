// <auto-generated />
using System;
using ComputerBuildService.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComputerBuildService.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200714085926_Rename Processor")]
    partial class RenameProcessor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComputerBuildService.Shared.Models.CpuСooler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiseLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberBlower")
                        .HasColumnType("int");

                    b.Property<string>("RotationSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeBlower")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Sockets")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpuСoolers");
                });

            modelBuilder.Entity("ComputerBuildService.Shared.Models.GraphicsCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FrequencyGraphicsProcessor")
                        .HasColumnType("int");

                    b.Property<int>("FrequencyVideoMemory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VideoMemoryAmount")
                        .HasColumnType("int");

                    b.Property<string>("VideoMemoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.ToTable("GraphicsCards");

                    b.HasDiscriminator<string>("Discriminator").HasValue("GraphicsCard");
                });

            modelBuilder.Entity("ComputerBuildService.Shared.Models.HardDrive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ConnectionInterface")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotationSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HardDrives");
                });

            modelBuilder.Entity("ComputerBuildService.Shared.Models.Motherboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chipset")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Connectors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormFactor")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int?>("IntegratedGraphicsId")
                        .HasColumnType("int");

                    b.Property<int?>("IntegratedProcessorId")
                        .HasColumnType("int");

                    b.Property<int>("MaximumMemory")
                        .HasColumnType("int");

                    b.Property<int>("MemorySlots")
                        .HasColumnType("int");

                    b.Property<string>("MemoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetworkInterface")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Socket")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("SoundCard")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IntegratedGraphicsId");

                    b.HasIndex("IntegratedProcessorId");

                    b.ToTable("Motherboards");
                });

            modelBuilder.Entity("ComputerBuildService.Shared.Models.PowerSupply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PowerSupplies");
                });

            modelBuilder.Entity("ComputerBuildService.Shared.Models.Processor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FrequencyCore")
                        .HasColumnType("int");

                    b.Property<int?>("IntegratedGraphicsId")
                        .HasColumnType("int");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("NumberOfCores")
                        .HasColumnType("int");

                    b.Property<string>("RangeOf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Socket")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.HasIndex("IntegratedGraphicsId");

                    b.ToTable("Processors");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Processor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FrequencyCore = 2500,
                            IntegratedGraphicsId = 1,
                            Maker = "AMD",
                            Model = "1600",
                            NumberOfCores = 6,
                            RangeOf = "Ryzen 5",
                            Socket = "AM4"
                        });
                });

            modelBuilder.Entity("ComputerBuildService.Shared.Models.RandomAccessMemory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sockets")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.ToTable("RandomAccessMemorys");
                });

            modelBuilder.Entity("ComputerBuildService.Shared.Models.IntegratedModule.IntegratedGraphics", b =>
                {
                    b.HasBaseType("ComputerBuildService.Shared.Models.GraphicsCard");

                    b.HasDiscriminator().HasValue("IntegratedGraphics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FrequencyGraphicsProcessor = 1600,
                            FrequencyVideoMemory = 2048,
                            Name = "vega 8",
                            VideoMemoryAmount = 1250,
                            VideoMemoryType = "DDR4"
                        });
                });

            modelBuilder.Entity("ComputerBuildService.Shared.Models.IntegratedModule.IntegratedProcessor", b =>
                {
                    b.HasBaseType("ComputerBuildService.Shared.Models.Processor");

                    b.HasDiscriminator().HasValue("IntegratedProcessor");
                });

            modelBuilder.Entity("ComputerBuildService.Shared.Models.Motherboard", b =>
                {
                    b.HasOne("ComputerBuildService.Shared.Models.IntegratedModule.IntegratedGraphics", "IntegratedGraphics")
                        .WithMany("Motherboards")
                        .HasForeignKey("IntegratedGraphicsId")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.HasOne("ComputerBuildService.Shared.Models.IntegratedModule.IntegratedProcessor", "IntegratedProcessor")
                        .WithMany("Motherboards")
                        .HasForeignKey("IntegratedProcessorId")
                        .OnDelete(DeleteBehavior.ClientNoAction);
                });

            modelBuilder.Entity("ComputerBuildService.Shared.Models.Processor", b =>
                {
                    b.HasOne("ComputerBuildService.Shared.Models.IntegratedModule.IntegratedGraphics", "IntegratedGraphics")
                        .WithMany("CentralProcessorUnits")
                        .HasForeignKey("IntegratedGraphicsId");
                });
#pragma warning restore 612, 618
        }
    }
}
